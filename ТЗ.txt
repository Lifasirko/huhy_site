1. Загальна інформація
Назва проекту: Huhy Website
Ціль проекту: Створити односторінковий вебсайт для інформування про настільні рольові ігри, які проводяться, з можливістю перегляду календаря подій і запису на події.
Основні технології: HTML, CSS, JavaScript, Python, Docker, PostgreSQL, Poetry (для управління залежностями).

2. Функціональні вимоги
Головна сторінка:
Меню: З автопрокруткою до потрібного блоку при натисканні на пункт меню.
Шапка: З банером і текстом, що привертає увагу.
Перелік настільних рольових ігор (НРІ): Відображення картинок із коротким описом; при наведенні текст розгортається замість картинки.
Про нас: Карусель із зображеннями та текстом про команду або діяльність.
Інші послуги: Блок із описом інших послуг, що надаються.
Календар подій:
Інтеграція з API Google Календаря для відображення подій.
Можливість вибору та бронювання події, на яку користувач клацнув.
Форма заявки:
Можливість відправити заявку на участь через телефон або Telegram.
Відправка заявок на електронну пошту і в Telegram.
Реалізація авторизації в Telegram-боті, щоб тільки адміністратори могли отримувати заявки.
Підвал: Містить мапу з місцезнаходженням і контактною інформацією.

Додатково потім:
Блог: Розділ з публікаціями.
Чат: Інтеграція системи онлайн-спілкування або використання open-source рішень для чату.


3. Нефункціональні вимоги
Адаптивність: Сайт має коректно відображатися на різних пристроях, включаючи мобільні телефони, планшети та комп’ютери.
Швидкість завантаження: Оптимізація коду та використання CDN для статичних (хз шо то таке. порадив чатгпт).
SEO: Базова оптимізація для пошукових систем.
Безпека: Використання SSL, захист від атак типу XSS, CSRF, безпечне зберігання паролів.


4. Інтеграції та зовнішні сервіси
Google Calendar API: Для інтеграції календаря подій.
Telegram API: Для інтеграції бота для отримання заявок.
Google Maps: Для відображення місця проведення подій у підвалі.
Google Analytics: Для відстеження відвідуваності.
Соціальні мережі: Підключення до основних соціальних платформ для зручного обміну контентом.


5. Адміністративні інструменти
Панель адміністратора: Для управління контентом, перегляду бронювань та управління подіями.
Система повідомлень: Сповіщення адміністраторів про нові заявки через Telegram.


6. Процес розробки
Етап 1: Проектування структури бази даних, архітектури серверної частини та структури сайту.
Етап 2: Реалізація функціональності на Python, інтеграція з базою даних PostgreSQL та API Google Календаря.
Етап 3: Розробка фронтенду з використанням HTML, CSS та JavaScript.
Етап 4: Тестування на різних пристроях та у різних браузерах.
Етап 5: Запуск сайту на Docker, налаштування CI/CD та моніторинг.


7. Документація
Технічна документація: Опис архітектури, API, структури бази даних та взаємодії між компонентами.
Керівництво для адміністратора: Інструкція по управлінню сайтом, включаючи управління подіями, отриманням заявок та контентом.
